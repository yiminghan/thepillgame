import { Pill } from "@prisma/client";
import Head from "next/head";
import { useState } from "react";

enum Status {
  notStarted,
  submitting,
  HandelTaken,
  Finished,
}
export default function Home() {
  const [twitter, setTwitter] = useState("");
  const [submitStatus, setSubmitStatus] = useState(Status.notStarted);
  const [pill, setPill] = useState<Pill | undefined>(undefined);

  const checkTwitter = () => {
    if (twitter.length == 0) {
      alert("Please enter your twitter handle");
    }
  };

  const pilled = (pill: Pill) => {
    setPill(pill);
    if (submitStatus == Status.submitting) {
      return;
    }
    checkTwitter();
    setSubmitStatus(Status.submitting);
    void fetch("/api/poll", {
      method: "POST",
      body: JSON.stringify({
        twitter: twitter,
        pill: pill,
      }),
      headers: {
        "Content-Type": "application/json",
      },
    }).then((res) => {
      if (res.status == 200) {
        setSubmitStatus(Status.Finished);
        return;
      }
      if (res.status == 400) {
        setSubmitStatus(Status.notStarted);
        return;
      }
      if (res.status == 409) {
        setSubmitStatus(Status.HandelTaken);
        return;
      }
    });
  };

  return (
    <>
      <Head>
        <title>The Pill Game</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            The <span className="text-[hsl(280,100%,70%)]">Pill</span> Game
          </h1>
          <h2 className="mx-[20%] text-5xl font-extrabold tracking-tight text-white sm:text-[2rem]">
            Choose between a <span className="text-blue-600">blue pill</span> or{" "}
            <span className="text-red-600">red pill</span>
            <br />
            If more than 50% of ppl choose{" "}
            <span className="text-blue-600">blue pill</span>, nothing happens
            <br />
            If not, <span className="text-red-600">red pills</span> live and{" "}
            <span className="text-blue-600">blue pills</span> die. (Not actually
            DEAD, but they have to donate $100 to a charity of their choice)
          </h2>
          <div className="flex flex-col items-center">
            <label className="text-lg font-extrabold tracking-tight text-white">
              Twitter @{" "}
              <span className="text-bold">
                (This is how we will keep you accountable)
              </span>
            </label>
            <div className="flex flex-row">
              <div className="text-lg font-extrabold tracking-tight text-white">
                @
              </div>
              <input
                className="w-100"
                value={twitter}
                onChange={(e) => setTwitter(e.target.value)}
                placeholder="twitter handle"
              ></input>
            </div>
            {submitStatus == Status.HandelTaken && (
              <div className="text-lg font-extrabold text-red-500">
                {" "}
                There is currently an existing submission with this @{" "}
              </div>
            )}
          </div>
          {submitStatus === Status.Finished && pill ? (
            <div>
              <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[4rem]">
                You have choosen the{" "}
                <span
                  className={
                    pill == Pill.BLUE_PILL ? "text-blue-600" : "text-red-600"
                  }
                >
                  {pill == Pill.BLUE_PILL ? "Blue Pill" : "Red Pill"}
                </span>
                <br />
              </h1>
              <h2 className="text-3xl font-extrabold tracking-tight text-white sm:text-[2rem]">
                Results will be notified via Twitter, Follow{" "}
                <a
                  href="https://twitter.com/yimingdothan"
                  target="__blank"
                  className="text-blue-600 underline"
                >
                  YiMing
                </a>{" "}
                to stay up to date.
              </h2>
            </div>
          ) : submitStatus === Status.submitting ? (
            <div>
              <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[4rem]">
                Submitting...
              </h1>
            </div>
          ) : (
            <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
              <button
                onClick={() => {
                  pilled(Pill.BLUE_PILL);
                }}
                className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              >
                <h3 className="text-2xl font-bold text-blue-600">
                  Blue Pill →
                </h3>
                <div className="text-bold text-lg">
                  If you die, you have to donate $100 to charity.
                </div>
              </button>
              <button
                onClick={() => {
                  pilled(Pill.RED_PILL);
                }}
                className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              >
                <h3 className="text-2xl font-bold text-red-600">Red Pill →</h3>
                <div className="text-lg">
                  Nothing happens, you keep your money.
                </div>
              </button>
            </div>
          )}
        </div>
      </main>
    </>
  );
}
